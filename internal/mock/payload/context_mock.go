// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/payload/context.go

// Package mock_payload is a generated GoMock package.
package mock_payload

import (
	net "net"
	reflect "reflect"

	payload "bitbucket.org/non-pn/mini-redis-go/internal/payload"
	gomock "go.uber.org/mock/gomock"
)

// MockIRequestContext is a mock of IRequestContext interface.
type MockIRequestContext struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestContextMockRecorder
}

// MockIRequestContextMockRecorder is the mock recorder for MockIRequestContext.
type MockIRequestContextMockRecorder struct {
	mock *MockIRequestContext
}

// NewMockIRequestContext creates a new mock instance.
func NewMockIRequestContext(ctrl *gomock.Controller) *MockIRequestContext {
	mock := &MockIRequestContext{ctrl: ctrl}
	mock.recorder = &MockIRequestContextMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRequestContext) EXPECT() *MockIRequestContextMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockIRequestContext) Error(code uint16, msg string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Error", code, msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// Error indicates an expected call of Error.
func (mr *MockIRequestContextMockRecorder) Error(code, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockIRequestContext)(nil).Error), code, msg)
}

// GetConn mocks base method.
func (m *MockIRequestContext) GetConn() net.Conn {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConn")
	ret0, _ := ret[0].(net.Conn)
	return ret0
}

// GetConn indicates an expected call of GetConn.
func (mr *MockIRequestContextMockRecorder) GetConn() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConn", reflect.TypeOf((*MockIRequestContext)(nil).GetConn))
}

// GetPayload mocks base method.
func (m *MockIRequestContext) GetPayload() *payload.RequestPayload {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPayload")
	ret0, _ := ret[0].(*payload.RequestPayload)
	return ret0
}

// GetPayload indicates an expected call of GetPayload.
func (mr *MockIRequestContextMockRecorder) GetPayload() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPayload", reflect.TypeOf((*MockIRequestContext)(nil).GetPayload))
}

// GetPubsub mocks base method.
func (m *MockIRequestContext) GetPubsub(k string) payload.StringTopic {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPubsub", k)
	ret0, _ := ret[0].(payload.StringTopic)
	return ret0
}

// GetPubsub indicates an expected call of GetPubsub.
func (mr *MockIRequestContextMockRecorder) GetPubsub(k interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPubsub", reflect.TypeOf((*MockIRequestContext)(nil).GetPubsub), k)
}

// GetRedis mocks base method.
func (m *MockIRequestContext) GetRedis(k string) []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRedis", k)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// GetRedis indicates an expected call of GetRedis.
func (mr *MockIRequestContextMockRecorder) GetRedis(k interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRedis", reflect.TypeOf((*MockIRequestContext)(nil).GetRedis), k)
}

// Response mocks base method.
func (m *MockIRequestContext) Response(res payload.ResponsePayload) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Response", res)
	ret0, _ := ret[0].(error)
	return ret0
}

// Response indicates an expected call of Response.
func (mr *MockIRequestContextMockRecorder) Response(res interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Response", reflect.TypeOf((*MockIRequestContext)(nil).Response), res)
}

// SetPubsub mocks base method.
func (m *MockIRequestContext) SetPubsub(k string, v payload.StringTopic) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetPubsub", k, v)
}

// SetPubsub indicates an expected call of SetPubsub.
func (mr *MockIRequestContextMockRecorder) SetPubsub(k, v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPubsub", reflect.TypeOf((*MockIRequestContext)(nil).SetPubsub), k, v)
}

// SetRedis mocks base method.
func (m *MockIRequestContext) SetRedis(k string, v []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetRedis", k, v)
}

// SetRedis indicates an expected call of SetRedis.
func (mr *MockIRequestContextMockRecorder) SetRedis(k, v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetRedis", reflect.TypeOf((*MockIRequestContext)(nil).SetRedis), k, v)
}
